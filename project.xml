<project
    name = "fty-metric-snmp"
    description = "agent for getting measurements using LUA and SNMP"
    script = "zproject.gsl"
    email = "EatonIPCOpenSource@eaton.com"
    url = "https://42ity.org"
    license = "GPL-2.0+"
    repository = "https://github.com/42ity/fty-metric-snmp"
    >

    <target name = "debian" />
    <target name = "redhat" />
    <target name = "travis" />
    <target name = "jenkins" >
        <option name = "agent_label" value = "devel-image &amp;&amp; x86_64" />
        <option name = "triggers_pollSCM" value = "H/2 * * * *" />
        <option name = "test_cppcheck" value = "1" />
        <option name = "build_docs" value = "1" />
        <option name = "dist_docs" value = "1" />
    </target>

    <include filename = "license.xml" />
    <version major = "1" minor = "0" patch = "0" />

    <!-- TODO: Use "fty-common-mlm" and hide ZMQ in there? -->
    <use project = "czmq"
        repository = "https://github.com/42ity/czmq.git"
        release = "v3.0.2-FTY-master"
        min_major = "3" min_minor = "0" min_patch = "2" >

        <use project = "libzmq"
            repository = "https://github.com/42ity/libzmq.git"
            release = "4.2.0-FTY-master" >

            <use project = "libsodium" prefix = "sodium"
                repository = "https://github.com/42ity/libsodium.git"
                release = "1.0.5-FTY-master"
                test = "sodium_init"
                />
        </use>
    </use>

    <use project = "malamute" min_major = "1" test = "mlm_server_test"
        repository = "https://github.com/42ity/malamute.git"
        release = "1.0-FTY-master"
        />

    <!-- Note: pure C projects should use fty-log/fty_logger.h, C++ use fty_log.h -->
    <use project = "fty-common-logging" libname = "libfty_common_logging"
        header = "fty_log.h"
        repository = "https://github.com/42ity/fty-common-logging.git"
        release = "master"
        test = "fty_common_logging_selftest" >

        <!-- Note: pure C projects should use clogger.h, C++ use logger.h -->
        <use project = "log4cplus"
            header = "log4cplus/logger.h"
            test = "appender_test"
            repository = "https://github.com/42ity/log4cplus.git"
            release = "1.1.2-FTY-master"
            />
    </use>

    <use project = "fty-proto" libname = "libfty_proto" header = "ftyproto.h" prefix = "fty_proto"
        min_major = "1" min_minor = "0" min_patch = "0"
        repository = "https://github.com/42ity/fty-proto.git"
        release = "master"
        test = "fty_proto_test" >
        <use project = "malamute" />
    </use>

    <use project = "lua-5.1" />

    <use project = "netsnmp"
        libname = "netsnmp"
        header = "net-snmp/net-snmp-config.h"
        debian_name = "libsnmp-dev"
        redhat_name = "net-snmp-devel"
        test = "init_snmp"
        />

    <class name = "luasnmp" private = "1">lua snmp extension</class>
    <class name = "rule" private = "1">class representing one rule</class>
    <class name = "vsjson" private = "1">JSON parser</class>
    <class name = "host_actor" private = "1">Actor monitoring one host</class>
    <class name = "ftysnmp" private = "1">basic snmp functions</class>
    <class name = "credentials" private = "1">list of snmp credentials</class>
    <class name = "fty_metric_snmp_server" state = "stable">Main actor</class>
    <class name = "rule_tester" state = "stable">Class for testing rule file</class>

    <main name = "fty-metric-snmp" service = "1" />
    <main name = "fty-metric-snmp-rule" />
</project>
